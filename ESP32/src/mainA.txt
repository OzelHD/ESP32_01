#include <SPI.h>
#include <LoRa.h>
#include <Adafruit_NeoPixel.h>

#define CS_PIN   9
#define RST_PIN  3
#define IRQ_PIN  2
#define SCK_PIN  5
#define MISO_PIN 6
#define MOSI_PIN 7

#define LED_PIN 8
#define LED_COUNT 1

SPIClass spiLoRa(SPI);
Adafruit_NeoPixel pixel(LED_COUNT, LED_PIN, NEO_GRB + NEO_KHZ800);

String outgoingMessage = "";
bool waitingForAck = false;
unsigned long sendTime = 0;

void setColor(uint8_t r, uint8_t g, uint8_t b) {
  pixel.setPixelColor(0, pixel.Color(r, g, b));
  pixel.show();
}

void setup() {
  Serial.begin(115200);
  delay(1000);
  pixel.begin();
  setColor(0, 0, 255); // 🔵 waiting for input

  spiLoRa.begin(SCK_PIN, MISO_PIN, MOSI_PIN, CS_PIN);
  LoRa.setSPI(spiLoRa);
  LoRa.setPins(CS_PIN, RST_PIN, IRQ_PIN);

  if (!LoRa.begin(433E6)) {
    Serial.println("❌ LoRa init failed");
    setColor(255, 0, 0); // 🔴 error
    while (true);
  }

  Serial.println("✅ LoRa sender ready.");
}

void loop() {
  if (waitingForAck) {
    int packetSize = LoRa.parsePacket();
    if (packetSize) {
      String received = LoRa.readString();
      if (received == "ACK") {
        Serial.println("✅ ACK received!");
        setColor(0, 255, 0); // 🟢 success
        delay(1000);
        setColor(0, 0, 255); // 🔵 ready again
        waitingForAck = false;
      }
    } else if (millis() - sendTime > 5000) {
      Serial.println("❌ Timeout - no ACK");
      setColor(255, 0, 0); // 🔴 failed
      delay(1000);
      setColor(0, 0, 255); // 🔵 ready again
      waitingForAck = false;
    }
    return;
  }

  // Wait for user input
  if (Serial.available()) {
    outgoingMessage = Serial.readStringUntil('\n');
    if (outgoingMessage.length() > 0) {
      Serial.print("📤 Sending: ");
      Serial.println(outgoingMessage);
      setColor(255, 255, 0); // 🟡 sending

      LoRa.beginPacket();
      LoRa.print(outgoingMessage);
      LoRa.endPacket();

      sendTime = millis();
      waitingForAck = true;
    }
  }
}
